Infinispan简介
-------------

1.1 关于infinispan
++++++++++++++++++

Infinispan是一个分布式内存数据网格，它提供了以下功能：

* 无固定的数据模型的key-value存储 - Infinispan提供了一个NoSQL数据库，没有一个固定的数据模型，可以灵活性，方便的以存储不同的对象。
* 基于网格的数据存储 - Infinispan的设计很容易地复制数据在多个节点。
* 弹性伸缩 - 添加和删除节点实现简单，非破坏性的。
* 多址接入协议 - 可以使用REST，Memcached，Hot Rod，或简单的映射API很容易访问Infinispan。

1.2 Infinispan的使用模式
++++++++++++++++++++++++

Infinispan的提供两种使用模式：

* 远程客户端-服务器模式
远程客户端-服务器模式提供了一个管理，分布式和集群化的数据网格服务器。应用程序可以远程访问Infinispan的服务通过Hot Rod，Memcached或REST客户端API。

* 库模式
库模式提供建立和部署一个自定义运行环境时所需要的所有二进制文件文件（jar文件）。 库模式允许本地访问分布式集群中的单个节点。这种使用模式提供了应用程序访问Infinispan的功能。支持的容器包括的Tomcat7和JBoss Application Server 7。

1.3 Infinispan的优点
++++++++++++++++++++

* 大量的堆和高可用性
在Infinispan中，应用程序不再需要委托的大部分数据查询过程到一个大的单一的数据库服务器，这很有性能方面的优势。 Infinispan的完全消除了目前大多数企业应用程序存在的性能瓶颈。

* 可扩展性
由于Infinispan的均匀分布的数据的，唯一的大小的上限网格在网络上的群组通信。网络的群组通信是最小好资源的，主要的限制是发现新的节点。节点允许的所有数据访问模式，通过对等连接进行直接沟通，有利于进一步提高可扩展性。 Infinispan的集群，可以按实时删除或增加节点，而不需要重新启动的基础设施。这种实时通信的特点是Infinispan具有非常好的扩展性。

* 数据分发
Infinispan的使用一致性哈希算法来确定key的位置。优点包括包括：

. 低成本
. 速度
. 确定的key位置降低了对元数据或网络流量的要求

数据分布，确保有足够的副本在集群中，提供耐用性和容错性，而不是仅仅保留一个副本，这将减少对环境的可扩展性。

* 持久化
Infinispan的公开了一个的CacheStore接口，这个接口有多种多种高性能实现，包括JDBC缓存存储和基于文件系统的缓存存储。CacheStore可以用来衍生新的缓存，这样确保了数据的安全性，防止数据被破坏。 如果一个应用遇到内存不足的问题时，CacheStore提供刷新数据到到磁盘的功能。

* 语言绑定
Infinispan的支持流行的memcached协议，为当前流行的大多数编程语言提供客户端接口，以及为优化的Infinispan协议，称为Hot Rod。作为结果，Infinispan的可以用于任何主要的网站或者应用程序。 

* 管理
在真实网格环境中会有几百个或更多的服务器，管理是一个重要的特征。Infinispan提供强大的管理功能.

1.4 Infinispan的高速缓存架构
++++++++++++++++++++++++++++

FIGURE

infinispans缓存基础设施描绘彼此的各个元素和它们的相互作用。对于用户的理解，在高速缓存体系结构图被分离成两部分：

元素，用户可以直接交互（如图内一个黑色方块），其中包括高速缓存，高速缓存管理器，1级缓存，持久性存储接口和持久性存储。

元素，用户可以直接与交互（图内的白盒），其中包括高速缓存接口和应用程序。

Infinispan的高速缓存架构包括以下内容：
* Persistent Store 
用来永久保存缓存实例和实体
* Persistent Store Interface
Infinispan的持久性存储提供了两个接口来访问持久性存储。持久性存放区介面可以是以下之一：
**  一个缓存加载器是一个只读接口，提供了一个持久性数据存储的连接。一缓存加载器可以查找和检索数据从高速缓存的实例，也可以从持久性存储。
**  缓存存储扩展缓存加载器的功能，包括写入功能，通过公开的方法，使缓存加载器来加载和存储状态。

* Level 1 Cache
 一级缓存（或L1高速缓存）存储远程缓存条目后，他们第一次访问，以防止不必要的远程读取操作，每次使用相同的项目。

* Cache Manager 
高速缓存管理器是用于检索缓存Infinispan的实例中的主要机制，并可以用作使用高速缓存的一个起点。

* Cache
Cache用来保存Cache Manager检索出来的缓存实例

* Cache Interface
高速缓存接口使用的协议Memcached，Hot Rod或REST的接口与高速缓存进行交互。
**Memcached是一个分布式的内存对象缓存系统，用于存储在内存中的键值。memcached的缓存系统定义了一个基于文本的客户端 - 服务器高速缓存协议叫做Memcached的协议。
** Hot Rod是一个二进制的TCP客户端 - 服务器协议，用于在Infinispan的。它被创造在其他客户机/服务器协议，如Memcached的克服的缺陷。Hot Rod能够智能路由客户的请求在Infinispan的服务器集群中。
** REST协议消除了需要紧密耦合的客户端库和绑定。 REST API引入了开销，并且需要一个REST客户端或REST调用自定义代码来理解和创造。

* Application
 允许用户与高速缓存通过高速缓存接口交互。浏览器是一个常见的例子，这样的最终用户应用程序。

1.5 Infinispan APIs
+++++++++++++++++++
Infinispan的提供以下API：
* Cache
* Batching
* Grouping
* CacheStore
* Externalizable

在Infinispan的远程客户端 - 服务器模式，只有下面的API可用于交互数据网格：

* 异步RemoteCache API（只能在远程客户端-服务器模式下与Hot Rod客户端结合使用）
* REST接口
* Memcached接口
* Hot Rod接口
** RemoteCache API

